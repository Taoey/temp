/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Entity;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import bean.BegRentBean;
import bean.LeaseShuiguoBean;
import bean.PublicBean;

import server.BegRentServer;
import server.BusinessServer;
import server.LeaseShuiguoServer;
import server.UserServer;
import server.impl.BegRentServerImpl;
import server.impl.BusinessServerImpl;
import server.impl.LeaseShuiguoServerImpl;
import server.impl.UserServerImpl;
import struts.form.BusinessForm;
import struts.form.UsersForm;
import entity.Business;
import entity.Leaseshuiguo;
import entity.Users;

/**
 * MyEclipse Struts Creation date: 06-23-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/business" name="businessForm" parameter="method"
 *                scope="request"
 */
@Entity public class BusinessAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException
	 */
	public ActionForward businessLogin(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		BusinessServer server = new BusinessServerImpl();

		Business business = server.login(businessForm.getUname(), businessForm.getUpwd());
		if (business == null) {

			response.getWriter().print("<script>");
			response.getWriter().print("alert('用户名或密码不正确！');");
			response.getWriter().print("window.history.go(-1);");
			response.getWriter().print("</script>");
			return null;

		}

//		request.getSession().setAttribute("business", business);
		request.getSession().setAttribute("business", business);
		if (businessForm.getFromto() != null
				&& businessForm.getFromto().equals("index")) {
			return mapping.findForward("index");
		} else {
			return mapping.findForward("usok");
		}

	}

	public ActionForward addBusiness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		BusinessForm businessForm = (BusinessForm) form;
		BusinessServer server=new BusinessServerImpl();
		
		PrintWriter out = response.getWriter();
		boolean flag = false;
		String bname = businessForm.getUname();
		String bpwd = businessForm.getUpwd();
		String bqr_pwd = businessForm.getUpwd();
		String bemail = businessForm.getEmail();
		String bphone = businessForm.getPhone();
				
		BusinessServer businessServer = new BusinessServerImpl();
		Business business = new Business();
		business.setUname(bname);
		business.setBpwd(bqr_pwd);
		business.setBemail(bemail);
		business.setBphone(bphone);

		flag = businessServer.add(business);
		if (flag == true) {

			out.print("<script>");
			out.print("alert('注册成功!!!');");
			out.print("window.location='userLogin.jsp';");

			out.print("</script>");
			return null;
		} else {

			out.print("<script>");
			out.print("alert('注册失败!!!');");
			out.print("window.history.go(-1);");
			out.print("</script>");
			return null;

		}

	}

	public ActionForward delBusiness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		BusinessServer server=new BusinessServerImpl();
		
		PrintWriter out = response.getWriter();
		int bid =businessForm.getUid();
		boolean flag = server.delete(bid);
		if(flag){
			out.print("<script>");
			out.print("alert('删除成功!!!');");
			out.print("window.location='business.do?method=showUsers&showPage=1';");
			out.print("</script>");
			return null;
		}else{
			out.print("<script>");
			out.print("alert('删除失败!!!');");
			out.print("window.history.go(-1);");
			out.print("</script>");
			return null;
		}
	}
	// 查看用户(分页查询)
	public ActionForward showBusiness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		BusinessServer server=new BusinessServerImpl();
		
		int showPage=businessForm.getShowPage();  //获得所要显示的页码
		
		String bname=businessForm.getUname();
		
		PublicBean bean=server.selectByPage(showPage, bname);
		
		request.setAttribute("ulist", bean.getList());
		request.setAttribute("allCount", bean.getAllCount());
		request.setAttribute("allPage", bean.getAllPage());
		request.setAttribute("showPage", showPage);
		return mapping.findForward("show");

	}

	// 获得用户信息
	public ActionForward getBusiness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		BusinessServer server=new BusinessServerImpl();
		
        int bid=businessForm.getUid();  //获得用户id
        Business business=server.getBusiness(bid); //加载用户
		request.setAttribute("business", business);
		return mapping.findForward("showinfo");

	}	
	// 退出
	public ActionForward logout(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		request.getSession().setAttribute("business", null);
		if (businessForm.getFromto().equals("business")) {
			return mapping.findForward("login");
		} else {
			return mapping.findForward("index");
		}

	}

	// 修改密码
	public ActionForward updatePwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BusinessForm businessForm = (BusinessForm) form;
		PrintWriter out = response.getWriter();
		boolean flag = false;

		String newpwd = request.getParameter("newpwd");

		BusinessServer businessServer = new BusinessServerImpl();

		Business business = (Business) request.getSession().getAttribute("business");

		business.setBpwd(newpwd);

		flag = businessServer.update(business);
		if (flag == true) {
			out.print("<script>");
			out.print("alert('修改成功!!!');");
			out.print("window.location='update_pwd.jsp';");
			out.print("</script>");
			return null;
		} else {

			out.print("<script>");
			out.print("alert('修改失败!!!');");
			out.print("window.history.go(-1);");
			out.print("</script>");
			return null;

		}

	}
	
	public ActionForward AddBusinessinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException, IllegalAccessException,
			InvocationTargetException {
		BusinessForm businessForm = (BusinessForm) form;

		BusinessServer userver = new BusinessServerImpl();
		PrintWriter out = response.getWriter();

		int uid = businessForm.getUid();

		boolean isinfo = false;		 
		Business business = userver.getBusiness(uid); // 加载当前用户基本信息（users 表）
		business.setBemail(businessForm.getEmail());
		business.setBphone(businessForm.getPhone());
		business.setBcontact(businessForm.getBcontact());
		business.setBaddress(businessForm.getBaddress());
		business.setBprofile(businessForm.getBprofile());
		business.setRemark(businessForm.getRemark());
		
		String fileName = uploadImg(businessForm, request, response);
		business.setBlogo(fileName);
//		// 判断当前用户是否有详细信息
//		if (uinfo == null) { // 为null,没有详细信息
//			usersInfo = new UsersInfo();
//			BeanUtils.copyProperties(usersInfo, usersInfoForm); // 复制JavaBean
//
//			usersInfo.setUsers(user);
//			String fileNmae = uploadImg(usersInfoForm, request, response);
//			usersInfo.setImage(fileNmae);
//			isinfo = infoServer.add(usersInfo); // 新的详细信息，调用添加方法
//
//		} else { // 当前用户有详细信息
//			String file=uinfo.getImage();   //原图片
//			BeanUtils.copyProperties(uinfo, usersInfoForm); // 复制JavaBean
//			String fileName = uploadImg(usersInfoForm, request, response);
//			System.out.println("fileName:"+fileName);
//			System.out.println("file:"+file);
//            if(!fileName.equals("")){
//            	uinfo.setImage(fileName);
//            }else{
//            	uinfo.setImage(file);
//            } 
//			isinfo = infoServer.update(uinfo);// 调用修改方法
//		}

//		// 判断用户基本信息是否有所修改
//		if (!user.getPhone().equals(usersForm.getPhone())
//				|| !user.getEmail().equals(usersForm.getEmail())) {
//			BeanUtils.copyProperties(user, usersForm); // 复制JavaBean
//			userver.update(user);
//		}
		isinfo = userver.update(business);
		if (isinfo) {
			Business businesses = userver.getBusiness(uid); // 加载当前用户基本信息（users 表）
			request.getSession().setAttribute("business", business);
			out.print("<script>");
			out.print("alert('保存成功!!!');");
			out.print("window.location='business.jsp';");
			out.print("</script>");
			return null;
		} else {
			out.print("<script>");
			out.print("alert('保存失败!!!');");
			out.print("window.history.go(-1);");
			out.print("</script>");
		}

		return null;
	}

	public String uploadImg(BusinessForm form, HttpServletRequest request,
			HttpServletResponse response) throws FileNotFoundException,
			IOException { // 上传
		//UsersInfoForm usersInfoForm = (UsersInfoForm) form;
		FormFile file = form.getBlogo();
		System.out.println("++++++++++++++++++"+form);
		System.out.println("____________________"+file);
		String fileName = file.getFileName();
		if (!fileName.equals("")) {
			String path = this.servlet.getServletContext().getRealPath(
					"/uploadIMG");

			byte[] data = file.getFileData();
			int size = file.getFileSize();
			File uploadFile = new File(path + "\\" + fileName);
			// 创建文件输出流
			FileOutputStream outputStream = new FileOutputStream(uploadFile);
			outputStream.write(data);
		}
		return fileName;

	}

	public ActionForward selectBusinessinfo(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) { // 查询
		BusinessForm usersInfoForm = (BusinessForm) form;

		BusinessServer infoServer = new BusinessServerImpl();
		List<Business> infolist = infoServer.select();
		request.setAttribute("infolist", infolist);
		return mapping.findForward("select");

	}

	// 获得用户水果的信息
	public ActionForward shuiguoInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LeaseShuiguoServer lserver = new LeaseShuiguoServerImpl();
		BegRentServer bserver = new BegRentServerImpl();

		int uid = ((Business) request.getSession().getAttribute("business")).getBusId(); // 获得当前用户id

		LeaseShuiguoBean lbean = new LeaseShuiguoBean();
		lbean.setIslist("nolist");
		lbean.setUid(uid);

		int lcount = lserver.getByPage(1, 1, lbean).getAllCount(); // 获得当前用户所发布的水果出售信息数

		BegRentBean bean = new BegRentBean();
		bean.setIslist("nolist");
		bean.setUid(uid);

		int bcount = bserver.selectBegRentByPage(1, 1,bean).getAllCount();// 获得当前用户所发布的购信息数

		request.setAttribute("lcount", lcount);
		request.setAttribute("bcount", bcount);
		request.setAttribute("isinfo", "ok");
		getCookie(request, response);// 获得用户浏览过的水果信息
		return mapping.findForward("business");

	}

	// 获得用户浏览过的房源信息
	public void getCookie(HttpServletRequest request,
			HttpServletResponse response) {
		LeaseShuiguoServer server = new LeaseShuiguoServerImpl();
		int uid = ((Business) request.getSession().getAttribute("business")).getBusId();// 获得当前登录用户id
		String cookieName = "shuiguoList" + uid; // cookie名
		Cookie cookies[] = request.getCookies();

		if (cookies != null) {
			Cookie cookie = null;
			for (Cookie c : cookies) {
				if (c.getName().equals(cookieName)) {
					cookie = c;
					break;
				}
			}
			if (cookie != null) {
				String strs[] = cookie.getValue().split(",");// 获得每一个水果id并存入数组
				List<Leaseshuiguo> cookieShuiguo = new ArrayList<Leaseshuiguo>();
				for (String str : strs) {
					// 加载水果信息
					Leaseshuiguo shuiguo = server.getShuiguo(Integer.parseInt(str));
					// 存入list集合
					if (shuiguo != null) {
						cookieShuiguo.add(shuiguo);
					}
				}
				request.setAttribute("cookieShuiguo", cookieShuiguo);
			}
		}

	}
}
