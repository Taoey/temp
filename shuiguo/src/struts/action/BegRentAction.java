/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Entity;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import server.AreaTypeServer;
import server.BegRentServer;
import server.ShuiguoTypeServer;
import server.ImageTableServer;
import server.LeaseShuiguoServer;
import server.UserServer;
import server.impl.AreaTypeServerImpl;
import server.impl.BegRentServerImpl;
import server.impl.ShuiguoTypeServerimpl;
import server.impl.ImageTableServerImpl;
import server.impl.LeaseShuiguoServerImpl;
import server.impl.UserServerImpl;
import struts.form.BegRentForm;
import struts.form.LeaseShuiguoForm;
import bean.BegRentBean;
import bean.LeaseShuiguoBean;
import bean.PublicBean;
import entity.AreaType;
import entity.BegRent;
import entity.Leaseshuiguo;
import entity.ShuiguoType;
import entity.ImageTable;
import entity.Users;

/**
 * MyEclipse Struts Creation date: 06-23-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/begRent" name="begRentForm" parameter="method"
 *                scope="request"
 */
@Entity public class BegRentAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selUserqz(ActionMapping mapping, ActionForm form, // 查询区域和房源类别
			HttpServletRequest request, HttpServletResponse response) {

		BegRentForm begRentForm = (BegRentForm) form;

		AreaTypeServer areaTypeServer = new AreaTypeServerImpl();
		ShuiguoTypeServer shuiguoTypeServer = new ShuiguoTypeServerimpl();

		List<AreaType> list = areaTypeServer.selArea();
		List<ShuiguoType> hlist = shuiguoTypeServer.select();

		request.setAttribute("alist", list);
		request.setAttribute("hlist", hlist);

		return mapping.findForward("qiuzu");
	}

	public ActionForward showInfo(ActionMapping mapping, ActionForm form, // 前台显示
			HttpServletRequest request, HttpServletResponse response) {

		BegRentForm begRentForm = (BegRentForm) form;

		BegRentServer begRentServer = new BegRentServerImpl();
		 
		BegRent begRent = begRentServer.getthis(Integer.parseInt(request
				.getParameter("bid")));

		request.setAttribute("beg", begRent);

		return mapping.findForward("showinfo");
	}

	public ActionForward selectBeanByPage(ActionMapping mapping,
			ActionForm form, // 带条件的查询分页
			HttpServletRequest request, HttpServletResponse response) {

		BegRentForm begRentForm = (BegRentForm) form;

		BegRentServer begRentServer = new BegRentServerImpl();
		int showpage = 0;
		int row = 26;
		if (begRentForm.getShowPage() == 1) {
			showpage = begRentForm.getShowPage();
		} else {
			showpage = Integer.parseInt(request.getParameter("showPage"));
		}

		AreaTypeServer areaTypeServer = new AreaTypeServerImpl();
		ShuiguoTypeServer shuiguoTypeServer = new ShuiguoTypeServerimpl();

		List<AreaType> alist = areaTypeServer.selArea();
		List<ShuiguoType> hlist = shuiguoTypeServer.select();

		LeaseShuiguoServer server = new LeaseShuiguoServerImpl();
		List<Leaseshuiguo> list = server.topShuiguo(new LeaseShuiguoBean(), 5);
		request.setAttribute("list", list);

		BegRentBean rentBean = new BegRentBean();

		if (request.getParameter("aid") != null
				&& request.getParameter("aid") != "") {
			rentBean.setAid(Integer.parseInt(request.getParameter("aid")));
		}
		if (request.getParameter("hid") != null
				&& request.getParameter("hid") != "") {
			rentBean.setHid(Integer.parseInt(request.getParameter("hid")));
		}
		if (request.getParameter("minprice") != null
				&& request.getParameter("minprice") != "") {
			rentBean.setMinprice(Integer.parseInt(request
					.getParameter("minprice")));
		}
		if (request.getParameter("maxprice") != null
				&& request.getParameter("maxprice") != "") {
			rentBean.setMaxprice(Integer.parseInt(request
					.getParameter("maxprice")));
		}
		if (request.getParameter("shuiguoid") != null
				&& request.getParameter("shuiguoid") != "") {
			rentBean.setShuiguoid(Integer.parseInt(request
					.getParameter("shuiguoid")));
		}
		getCookie(request, response);// 获得用户浏览过的房源信息
		PublicBean bean1 = begRentServer.selectQianByPage(showpage, row,
				rentBean);
		request.setAttribute("alist", alist);
		request.setAttribute("hlist", hlist);
		request.setAttribute("brlist", bean1.getList());
		request.setAttribute("allCount", bean1.getAllCount());
		request.setAttribute("showPage", bean1.getShowPage());
		request.setAttribute("allPage", bean1.getAllPage());
		
	    if(request.getSession().getAttribute("business") != null){
	
		return mapping.findForward("bshow");		
	    }
		return mapping.findForward("show");
	}
	// 获得用户浏览过的房源信息
	public void getCookie(HttpServletRequest request,
			HttpServletResponse response) {
		if(request.getSession().getAttribute("users")==null){
			return;
		}
		LeaseShuiguoServer server = new LeaseShuiguoServerImpl();
		int uid = ((Users) request.getSession().getAttribute("users")).getUid();// 获得当前登录用户id
		String cookieName = "shuiguoList" + uid; // cookie名
		Cookie cookies[] = request.getCookies();

		if (cookies != null) {
			Cookie cookie = null;
			for (Cookie c : cookies) {
				if (c.getName().equals(cookieName)) {
					cookie = c;
					break;
				}
			}
			if (cookie != null) {
				String strs[] = cookie.getValue().split(",");// 获得每一个水果id并存入数组
				List<Leaseshuiguo> cookieShuiguo = new ArrayList<Leaseshuiguo>();
				for (String str : strs) {
					// 加载水果信息
					Leaseshuiguo shuiguo = server.getShuiguo(Integer.parseInt(str));
					// 存入list集合
					if (shuiguo != null) {
						cookieShuiguo.add(shuiguo);
					}
				}
				request.setAttribute("cookieShuiguo", cookieShuiguo);
			}
		}

	}
	public ActionForward addUserqz(ActionMapping mapping, ActionForm form, // 发布求租
			HttpServletRequest request, HttpServletResponse response) {
		BegRentForm begRentForm = (BegRentForm) form;

		BegRent begRent = new BegRent();
		BeanUtils beanUtils = new BeanUtils();

		try {
			beanUtils.copyProperties(begRent, begRentForm);
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String esthment = "";
		for (int i = 0; i < begRentForm.getEsthment().length; i++) {

			esthment = esthment + begRentForm.getEsthment()[i] + ",";
		}
		begRent.setEsthment(esthment);
		begRent.setState(1);
		begRent.setTime(new Date().toLocaleString());
		Users users = (Users) request.getSession().getAttribute("users");
		begRent.setUsers(users);

		AreaTypeServer areaTypeServer = new AreaTypeServerImpl();// 获取区域
		begRent.setAreaType(areaTypeServer.getthis(begRentForm.getAid()));

		ShuiguoTypeServer shuiguoTypeServer = new ShuiguoTypeServerimpl();// 获取房品种
		begRent.setShuiguoType(shuiguoTypeServer
				.getShuiguo_type(begRentForm.getHid()));

		BegRentServer begRentServer = new BegRentServerImpl();// 添加求购
		begRentServer.addBegRent(begRent);

		begRentForm.setShowPage(1);
		return selBegRent(mapping, begRentForm, request, response);
	}

	public ActionForward selBegRent(ActionMapping mapping, ActionForm form,// 查询分页
			HttpServletRequest request, HttpServletResponse response) {
		BegRentForm begRentForm = (BegRentForm) form;

		BegRentServer begRentServer = new BegRentServerImpl();
		int showpage = 0;
		int row = 8;
		if (begRentForm.getShowPage() == 1) {
			showpage = begRentForm.getShowPage();
		} else {
			showpage = Integer.parseInt(request.getParameter("showPage"));
		}
		
		int uid=((Users)request.getSession().getAttribute("users")).getUid();
		BegRentBean rbean=new BegRentBean();
		rbean.setUid(uid);
		PublicBean bean = begRentServer.selectBegRentByPage(showpage, row,rbean);

		request.setAttribute("brlist", bean.getList());
		request.setAttribute("allCount", bean.getAllCount());
		request.setAttribute("showPage", bean.getShowPage());
		request.setAttribute("allPage", bean.getAllPage());
		return mapping.findForward("showbr");
	}

	public ActionForward delBegRent(ActionMapping mapping, ActionForm form,// 删除
			HttpServletRequest request, HttpServletResponse response) {
		BegRentForm begRentForm = (BegRentForm) form;

		int del = Integer.parseInt(request.getParameter("del"));

		BegRentServer begRentServer = new BegRentServerImpl();
		BegRent begRent = begRentServer.getthis(del);
		begRentServer.delBegRent(begRent);
		begRentForm.setShowPage(1);
		return selBegRent(mapping, begRentForm, request, response);
	}

	public ActionForward upBegRent(ActionMapping mapping, ActionForm form,// 修改
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		BegRentForm begRentForm = (BegRentForm) form;

		int bid = Integer.parseInt(request.getParameter("bid"));
		BegRentServer begRentServer = new BegRentServerImpl();
		// BegRent begRent=begRentServer.getthis(bid);

		BegRent begRent2 = new BegRent();

		try {
			BeanUtils.copyProperties(begRent2, begRentForm);

		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		begRent2.setState(1);
		begRent2.setId(bid);
		UserServer server = new UserServerImpl();
		AreaTypeServer areaTypeServer = new AreaTypeServerImpl();
		ShuiguoTypeServer shuiguoTypeServer = new ShuiguoTypeServerimpl();
		Users users = server.getUser(Integer.parseInt(request
				.getParameter("uid")));

		begRent2.setUsers(users);

		begRent2.setTime(new Date().toLocaleString());

		begRent2.setAreaType(areaTypeServer.getthis(begRentForm.getAid()));

		begRent2.setShuiguoType(shuiguoTypeServer.getShuiguo_type(begRentForm
				.getHid()));

		if (begRentServer.upBegRent(begRent2)) {
			response.getWriter().print("<script>");
			response.getWriter().print("alert('修改成功！');");
			response
					.getWriter()
					.print(
							"window.location='begRent.do?method=selBegRent&showPage=1'");
			response.getWriter().print("</script>");
		} else {
			response.getWriter().print("<script>");
			response.getWriter().print("alert('修改失败！');");
			response.getWriter().print("window.history.go(-1);");
			response.getWriter().print("</script>");
		}
		begRentForm.setShowPage(1);
		return selBegRent(mapping, begRentForm, request, response);
	}

	public ActionForward userqzUp(ActionMapping mapping, ActionForm form, // 修改页面返回的一个求租数据
			HttpServletRequest request, HttpServletResponse response) {

		BegRentForm begRentForm = (BegRentForm) form;

		AreaTypeServer areaTypeServer = new AreaTypeServerImpl();
		ShuiguoTypeServer mshuiguoypeServer = new ShuiguoTypeServerimpl();
		List<AreaType> list = areaTypeServer.selArea();
		List<ShuiguoType> hlist = mshuiguoypeServer.select();

		int bid = Integer.parseInt(request.getParameter("beg"));
		BegRentServer begRentServer = new BegRentServerImpl();
		BegRent begRent = begRentServer.getthis(bid);

		try {
			BeanUtils.copyProperties(begRentForm, begRent);
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		String str = begRent.getEsthment();

		if(str!=null && !str.equals("")){
			String[] atr = str.split(",");

			begRentForm.setEsthment(atr);
		}

		begRentForm.setUid(begRent.getUsers().getUid());
		begRentForm.setAid(begRent.getAreaType().getGid());
		begRentForm.setHid(begRent.getShuiguoType().getId());
		request.setAttribute("bid", bid);
		request.setAttribute("alist", list);
		request.setAttribute("hlist", hlist);

		return mapping.findForward("up");
	}

}